<wpf:ResourceDictionary xml:space="preserve" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:ss="urn:shemas-jetbrains-com:settings-storage-xaml" xmlns:wpf="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
	<s:String x:Key="/Default/CodeInspection/GeneratedCode/GeneratedFileMasks/=jquery_002A_002Ejs/@EntryIndexedValue">jquery*.js</s:String>
	<s:String x:Key="/Default/CodeInspection/GeneratedCode/GeneratedFileMasks/=jquery_002D_002A/@EntryIndexedValue"></s:String>
	<s:Boolean x:Key="/Default/CodeInspection/GeneratedCode/GeneratedFileMasks/=jquery_002D_002A/@EntryIndexRemoved">True</s:Boolean>
	<s:String x:Key="/Default/CodeInspection/GeneratedCode/GeneratedFileMasks/=jquery_002E_002A/@EntryIndexedValue"></s:String>
	<s:Boolean x:Key="/Default/CodeInspection/GeneratedCode/GeneratedFileMasks/=jquery_002E_002A/@EntryIndexRemoved">True</s:Boolean>
	<s:String x:Key="/Default/CodeInspection/GeneratedCode/GeneratedFileMasks/=Microsoft_002A_002Ejs/@EntryIndexedValue">Microsoft*.js</s:String>
	<s:String x:Key="/Default/CodeInspection/GeneratedCode/GeneratedFileMasks/=modernizr_002D_002A/@EntryIndexedValue">modernizr-*</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeCleanup/Profiles/=StyleCop/@EntryIndexedValue">&lt;?xml version="1.0" encoding="utf-16"?&gt;&lt;Profile name="StyleCop"&gt;&lt;CSUseAutoProperty&gt;True&lt;/CSUseAutoProperty&gt;&lt;CSMakeFieldReadonly&gt;True&lt;/CSMakeFieldReadonly&gt;&lt;CSUseVar&gt;&lt;BehavourStyle&gt;DISABLED&lt;/BehavourStyle&gt;&lt;LocalVariableStyle&gt;IMPLICIT_WHEN_INITIALIZER_HAS_TYPE&lt;/LocalVariableStyle&gt;&lt;ForeachVariableStyle&gt;ALWAYS_IMPLICIT&lt;/ForeachVariableStyle&gt;&lt;/CSUseVar&gt;&lt;CSOptimizeUsings&gt;&lt;OptimizeUsings&gt;True&lt;/OptimizeUsings&gt;&lt;EmbraceInRegion&gt;False&lt;/EmbraceInRegion&gt;&lt;RegionName&gt;&lt;/RegionName&gt;&lt;/CSOptimizeUsings&gt;&lt;CSReformatCode&gt;True&lt;/CSReformatCode&gt;&lt;CSReorderTypeMembers&gt;True&lt;/CSReorderTypeMembers&gt;&lt;StyleCop.Documentation&gt;&lt;SA1600ElementsMustBeDocumented&gt;False&lt;/SA1600ElementsMustBeDocumented&gt;&lt;SA1604ElementDocumentationMustHaveSummary&gt;False&lt;/SA1604ElementDocumentationMustHaveSummary&gt;&lt;SA1609PropertyDocumentationMustHaveValueDocumented&gt;False&lt;/SA1609PropertyDocumentationMustHaveValueDocumented&gt;&lt;SA1611ElementParametersMustBeDocumented&gt;False&lt;/SA1611ElementParametersMustBeDocumented&gt;&lt;SA1615ElementReturnValueMustBeDocumented&gt;False&lt;/SA1615ElementReturnValueMustBeDocumented&gt;&lt;SA1617VoidReturnValueMustNotBeDocumented&gt;False&lt;/SA1617VoidReturnValueMustNotBeDocumented&gt;&lt;SA1618GenericTypeParametersMustBeDocumented&gt;False&lt;/SA1618GenericTypeParametersMustBeDocumented&gt;&lt;SA1626SingleLineCommentsMustNotUseDocumentationStyleSlashes&gt;False&lt;/SA1626SingleLineCommentsMustNotUseDocumentationStyleSlashes&gt;&lt;SA1628DocumentationTextMustBeginWithACapitalLetter&gt;False&lt;/SA1628DocumentationTextMustBeginWithACapitalLetter&gt;&lt;SA1629DocumentationTextMustEndWithAPeriod&gt;False&lt;/SA1629DocumentationTextMustEndWithAPeriod&gt;&lt;SA1633SA1641UpdateFileHeader&gt;Ignore&lt;/SA1633SA1641UpdateFileHeader&gt;&lt;SA1639FileHeaderMustHaveSummary&gt;False&lt;/SA1639FileHeaderMustHaveSummary&gt;&lt;SA1642ConstructorSummaryDocumentationMustBeginWithStandardText&gt;False&lt;/SA1642ConstructorSummaryDocumentationMustBeginWithStandardText&gt;&lt;SA1643DestructorSummaryDocumentationMustBeginWithStandardText&gt;False&lt;/SA1643DestructorSummaryDocumentationMustBeginWithStandardText&gt;&lt;SA1644DocumentationHeadersMustNotContainBlankLines&gt;False&lt;/SA1644DocumentationHeadersMustNotContainBlankLines&gt;&lt;/StyleCop.Documentation&gt;&lt;/Profile&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeCleanup/SilentCleanupProfile/@EntryValue">StyleCop</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_FIRST_ARG_BY_PAREN/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_LINQ_QUERY/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_ARGUMENT/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_ARRAY_AND_OBJECT_INITIALIZER/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_CALLS_CHAIN/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_EXPRESSION/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_EXTENDS_LIST/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_FOR_STMT/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_PARAMETER/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTIPLE_DECLARATION/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTLINE_TYPE_PARAMETER_CONSTRAINS/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTLINE_TYPE_PARAMETER_LIST/@EntryValue">True</s:Boolean>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/BLANK_LINES_AROUND_SINGLE_LINE_AUTO_PROPERTY/@EntryValue">1</s:Int64>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/BLANK_LINES_AROUND_SINGLE_LINE_PROPERTY/@EntryValue">1</s:Int64>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_USER_LINEBREAKS/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/REDUNDANT_THIS_QUALIFIER_STYLE/@EntryValue">DO_NOT_USE</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_WITHIN_SINGLE_LINE_ARRAY_INITIALIZER_BRACES/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_LINES/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_MULTIPLE_DECLARATION_STYLE/@EntryValue">CHOP_ALWAYS</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_MULTIPLE_TYPE_PARAMEER_CONSTRAINTS_STYLE/@EntryValue">CHOP_ALWAYS</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_OBJECT_AND_COLLECTION_INITIALIZER_STYLE/@EntryValue">CHOP_ALWAYS</s:String>
	<s:String x:Key="/Default/CodeStyle/CSharpMemberOrderPattern/CustomPattern/@EntryValue">&lt;?xml version="1.0" encoding="utf-8" ?&gt;&#xD;
&#xD;
&lt;!--&#xD;
	I. Overall&#xD;
&#xD;
	I.1 Each pattern can have &lt;Match&gt;....&lt;/Match&gt; element. For the given type declaration, the pattern with the match, evaluated to 'true' with the largest weight, will be used &#xD;
	I.2 Each pattern consists of the sequence of &lt;Entry&gt;...&lt;/Entry&gt; elements. Type member declarations are distributed between entries&#xD;
	I.3 If pattern has RemoveAllRegions="true" attribute, then all regions will be cleared prior to reordering. Otherwise, only auto-generated regions will be cleared&#xD;
	I.4 The contents of each entry is sorted by given keys (First key is primary,  next key is secondary, etc). Then the declarations are grouped and en-regioned by given property&#xD;
&#xD;
	II. Available match operands&#xD;
&#xD;
	Each operand may have Weight="..." attribute. This weight will be added to the match weight if the operand is evaluated to 'true'.&#xD;
	The default weight is 1&#xD;
&#xD;
	II.1 Boolean functions:&#xD;
	II.1.1 &lt;And&gt;....&lt;/And&gt;&#xD;
	II.1.2 &lt;Or&gt;....&lt;/Or&gt;&#xD;
	II.1.3 &lt;Not&gt;....&lt;/Not&gt;&#xD;
&#xD;
	II.2 Operands&#xD;
	II.2.1 &lt;Kind Is="..."/&gt;. Kinds are: class, struct, interface, enum, delegate, type, constructor, destructor, property, indexer, method, operator, field, constant, event, member&#xD;
	II.2.2 &lt;Name Is="..." [IgnoreCase="true/false"] /&gt;. The 'Is' attribute contains regular expression&#xD;
	II.2.3 &lt;HasAttribute CLRName="..." [Inherit="true/false"] /&gt;. The 'CLRName' attribute contains regular expression&#xD;
	II.2.4 &lt;Access Is="..."/&gt;. The 'Is' values are: public, protected, internal, protected internal, private&#xD;
	II.2.5 &lt;Static/&gt;&#xD;
	II.2.6 &lt;Abstract/&gt;&#xD;
	II.2.7 &lt;Virtual/&gt;&#xD;
	II.2.8 &lt;Override/&gt;&#xD;
	II.2.9 &lt;Sealed/&gt;&#xD;
	II.2.10 &lt;Readonly/&gt;&#xD;
	II.2.11 &lt;ImplementsInterface CLRName="..."/&gt;. The 'CLRName' attribute contains regular expression&#xD;
	II.2.12 &lt;HandlesEvent /&gt;&#xD;
--&gt;&#xD;
&#xD;
&lt;Patterns xmlns="urn:shemas-jetbrains-com:member-reordering-patterns"&gt;&#xD;
&#xD;
    &lt;!-- Do not reorder COM interfaces --&gt;&#xD;
    &lt;Pattern&gt;&#xD;
        &lt;Match&gt;&#xD;
            &lt;And Weight="2000"&gt;&#xD;
                &lt;Kind Is="interface"/&gt;&#xD;
                &lt;HasAttribute CLRName="System.Runtime.InteropServices.InterfaceTypeAttribute"&#xD;
                              Inherit="true"/&gt;&#xD;
            &lt;/And&gt;&#xD;
        &lt;/Match&gt;&#xD;
    &lt;/Pattern&gt;&#xD;
&#xD;
    &lt;!-- Do not reorder P/Invoke structs --&gt;&#xD;
    &lt;Pattern&gt;&#xD;
        &lt;Match&gt;&#xD;
            &lt;And Weight="2000"&gt;&#xD;
                &lt;Or&gt;&#xD;
                    &lt;Kind Is="struct"/&gt;&#xD;
                    &lt;Kind Is="class"/&gt;&#xD;
                &lt;/Or&gt;&#xD;
                &lt;HasAttribute CLRName="System.Runtime.InteropServices.StructLayoutAttribute"&#xD;
                              Inherit="true"/&gt;&#xD;
            &lt;/And&gt;&#xD;
        &lt;/Match&gt;&#xD;
    &lt;/Pattern&gt;&#xD;
&#xD;
    &lt;!-- Do not reorder P/Invoke classes (called xxxNativeMethods) --&gt;&#xD;
    &lt;Pattern&gt;&#xD;
        &lt;Match&gt;&#xD;
            &lt;And Weight="2000"&gt;&#xD;
                &lt;Kind Is="class"/&gt;&#xD;
                &lt;Name Is=".*NativeMethods" /&gt;&#xD;
            &lt;/And&gt;&#xD;
        &lt;/Match&gt;&#xD;
    &lt;/Pattern&gt;&#xD;
&#xD;
    &lt;!-- StyleCop pattern --&gt;&#xD;
    &lt;Pattern RemoveAllRegions="true"&gt;&#xD;
        &lt;Match&gt;&#xD;
            &lt;Or Weight="1000" &gt;&#xD;
                &lt;Kind Is="class" /&gt;&#xD;
                &lt;Kind Is="struct" /&gt;&#xD;
                &lt;Kind Is="interface"/&gt;&#xD;
            &lt;/Or&gt;&#xD;
        &lt;/Match&gt;&#xD;
&#xD;
        &lt;!-- constants and fields --&gt;&#xD;
        &lt;Entry&gt;&#xD;
            &lt;Match&gt;&#xD;
                &lt;Or&gt;&#xD;
                    &lt;Kind Is="constant"/&gt;&#xD;
                    &lt;Kind Is="field"/&gt;&#xD;
                &lt;/Or&gt;&#xD;
            &lt;/Match&gt;&#xD;
            &lt;Sort&gt;&#xD;
                &lt;Access Order="public internal protected-internal protected private"/&gt;&#xD;
                &lt;Kind Order="constant field"/&gt;&#xD;
                &lt;Readonly/&gt;&#xD;
                &lt;Static/&gt;&#xD;
                &lt;Name/&gt;&#xD;
            &lt;/Sort&gt;&#xD;
        &lt;/Entry&gt;&#xD;
&#xD;
        &lt;!-- constructors --&gt;&#xD;
        &lt;Entry&gt;&#xD;
            &lt;Match&gt;&#xD;
                &lt;Or Weight="200"&gt;&#xD;
                    &lt;Kind Is="constructor"/&gt;&#xD;
                    &lt;Kind Is="destructor"/&gt;&#xD;
                &lt;/Or&gt;&#xD;
            &lt;/Match&gt;&#xD;
            &lt;Sort&gt;&#xD;
                &lt;Static/&gt;&#xD;
                &lt;Kind Order="constructor destructor"/&gt;&#xD;
                &lt;Access Order="public internal protected-internal protected private"/&gt;&#xD;
            &lt;/Sort&gt;&#xD;
        &lt;/Entry&gt;&#xD;
&#xD;
        &lt;!-- delegates --&gt;&#xD;
        &lt;Entry&gt;&#xD;
            &lt;Match&gt;&#xD;
                &lt;Kind Is="delegate"/&gt;&#xD;
            &lt;/Match&gt;&#xD;
            &lt;Sort&gt;&#xD;
                &lt;Access Order="public internal protected-internal protected private" /&gt;&#xD;
                &lt;Static /&gt;&#xD;
                &lt;Name/&gt;&#xD;
            &lt;/Sort&gt;&#xD;
        &lt;/Entry&gt;&#xD;
&#xD;
        &lt;!-- events --&gt;&#xD;
        &lt;Entry&gt;&#xD;
            &lt;Match&gt;&#xD;
                &lt;Kind Is="event"/&gt;&#xD;
            &lt;/Match&gt;&#xD;
            &lt;Sort&gt;&#xD;
                &lt;Access Order="public internal protected-internal protected private" /&gt;&#xD;
                &lt;Static /&gt;&#xD;
                &lt;Name/&gt;&#xD;
            &lt;/Sort&gt;&#xD;
        &lt;/Entry&gt;&#xD;
&#xD;
        &lt;!-- enum --&gt;&#xD;
        &lt;Entry&gt;&#xD;
            &lt;Match&gt;&#xD;
                &lt;Kind Is="enum"/&gt;&#xD;
            &lt;/Match&gt;&#xD;
            &lt;Sort&gt;&#xD;
                &lt;Access Order="public internal protected-internal protected private" /&gt;&#xD;
                &lt;Name/&gt;&#xD;
            &lt;/Sort&gt;&#xD;
        &lt;/Entry&gt;&#xD;
&#xD;
        &lt;!-- interfaces --&gt;&#xD;
        &lt;Entry&gt;&#xD;
            &lt;Match&gt;&#xD;
                &lt;Kind Is="interface" /&gt;&#xD;
            &lt;/Match&gt;&#xD;
            &lt;Sort&gt;&#xD;
                &lt;Access Order="public internal protected-internal protected private" /&gt;&#xD;
                &lt;Name/&gt;&#xD;
            &lt;/Sort&gt;&#xD;
        &lt;/Entry&gt;&#xD;
&#xD;
        &lt;!-- properties --&gt;&#xD;
        &lt;Entry&gt;&#xD;
            &lt;Match&gt;&#xD;
                &lt;Kind Is="property"/&gt;&#xD;
            &lt;/Match&gt;&#xD;
            &lt;Sort&gt;&#xD;
                &lt;Access Order="public internal protected-internal protected private" /&gt;&#xD;
                &lt;Static/&gt;&#xD;
                &lt;Name/&gt;&#xD;
            &lt;/Sort&gt;&#xD;
        &lt;/Entry&gt;&#xD;
&#xD;
        &lt;!-- indexers --&gt;&#xD;
        &lt;Entry&gt;&#xD;
            &lt;Match&gt;&#xD;
                &lt;Kind Is="indexer"&#xD;
                      Weight="300" /&gt;&#xD;
            &lt;/Match&gt;&#xD;
            &lt;Sort&gt;&#xD;
                &lt;Access Order="public internal protected-internal protected private" /&gt;&#xD;
                &lt;Static/&gt;&#xD;
                &lt;Name/&gt;&#xD;
            &lt;/Sort&gt;&#xD;
        &lt;/Entry&gt;&#xD;
&#xD;
        &lt;!-- operator --&gt;&#xD;
        &lt;Entry&gt;&#xD;
            &lt;Match&gt;&#xD;
                &lt;Kind Is="operator"/&gt;&#xD;
            &lt;/Match&gt;&#xD;
            &lt;Sort&gt;&#xD;
                &lt;Access Order="public internal protected-internal protected private" /&gt;&#xD;
                &lt;Static/&gt;&#xD;
                &lt;Name/&gt;&#xD;
            &lt;/Sort&gt;&#xD;
        &lt;/Entry&gt;&#xD;
&#xD;
        &lt;!-- public methods --&gt;&#xD;
        &lt;Entry&gt;&#xD;
            &lt;Match&gt;&#xD;
                &lt;And&gt;&#xD;
                    &lt;Kind Is="method"/&gt;&#xD;
                    &lt;Access Is="public"/&gt;&#xD;
                &lt;/And&gt;&#xD;
            &lt;/Match&gt;&#xD;
            &lt;Sort&gt;&#xD;
                &lt;Access Order="public"/&gt;&#xD;
                &lt;Static/&gt;&#xD;
                &lt;Name/&gt;&#xD;
            &lt;/Sort&gt;&#xD;
        &lt;/Entry&gt;&#xD;
&#xD;
        &lt;!-- Implemented Interfaces --&gt;&#xD;
        &lt;Entry&gt;&#xD;
            &lt;Match&gt;&#xD;
                &lt;And Weight="500"&gt;&#xD;
                    &lt;Kind Is="method"/&gt;&#xD;
                    &lt;ImplementsInterface CLRName=".*"/&gt;&#xD;
                &lt;/And&gt;&#xD;
            &lt;/Match&gt;&#xD;
            &lt;Sort&gt;&#xD;
                &lt;ImplementsInterface /&gt;&#xD;
                &lt;Access Order="public internal protected-internal protected private"/&gt;&#xD;
                &lt;Static/&gt;&#xD;
                &lt;Name/&gt;&#xD;
            &lt;/Sort&gt;&#xD;
        &lt;/Entry&gt;&#xD;
&#xD;
        &lt;!-- other methods --&gt;&#xD;
        &lt;Entry&gt;&#xD;
            &lt;Match&gt;&#xD;
                &lt;Kind Is="method"/&gt;&#xD;
            &lt;/Match&gt;&#xD;
            &lt;Sort&gt;&#xD;
                &lt;Access Order="public internal protected-internal protected private"/&gt;&#xD;
                &lt;Static/&gt;&#xD;
                &lt;Name/&gt;&#xD;
            &lt;/Sort&gt;&#xD;
        &lt;/Entry&gt;&#xD;
&#xD;
        &lt;!-- Nested structs --&gt;&#xD;
        &lt;Entry&gt;&#xD;
            &lt;Match&gt;&#xD;
                &lt;Kind Is="struct"&#xD;
                      Weight="600" /&gt;&#xD;
            &lt;/Match&gt;&#xD;
            &lt;Sort&gt;&#xD;
                &lt;Static /&gt;&#xD;
                &lt;Access Order="public internal protected-internal protected private" /&gt;&#xD;
                &lt;Name/&gt;&#xD;
            &lt;/Sort&gt;&#xD;
        &lt;/Entry&gt;&#xD;
&#xD;
        &lt;!-- Nested classes --&gt;&#xD;
        &lt;Entry&gt;&#xD;
            &lt;Match&gt;&#xD;
                &lt;Kind Is="class"&#xD;
                      Weight="700" /&gt;&#xD;
            &lt;/Match&gt;&#xD;
            &lt;Sort&gt;&#xD;
                &lt;Static /&gt;&#xD;
                &lt;Access Order="public internal protected-internal protected private" /&gt;&#xD;
                &lt;Name/&gt;&#xD;
            &lt;/Sort&gt;&#xD;
        &lt;/Entry&gt;&#xD;
&#xD;
        &lt;!-- all other members --&gt;&#xD;
&lt;Entry&gt;&#xD;
  &lt;Match&gt;&#xD;
    &lt;Kind Is="method"/&gt;&#xD;
  &lt;/Match&gt;&#xD;
  &lt;Sort&gt;&#xD;
    &lt;Name/&gt;&#xD;
  &lt;/Sort&gt;&#xD;
&lt;/Entry&gt;&#xD;
&#xD;
    &lt;/Pattern&gt;&#xD;
&lt;/Patterns&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/CSharpMemberOrderPattern/LayoutType/@EntryValue">CustomLayout</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CSharpUsing/AddImportsToDeepestScope/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CSharpUsing/AllowAlias/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CSharpUsing/CanUseGlobalAlias/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CSharpUsing/KeepNontrivialAlias/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CSharpUsing/QualifiedUsingAtNestedScope/@EntryValue">True</s:Boolean>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/VBFormat/BLANK_LINES_AROUND_SINGLE_LINE_INVOCABLE/@EntryValue">0</s:Int64>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/VBFormat/KEEP_BLANK_LINES_IN_CODE/@EntryValue">2</s:Int64>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/VBFormat/KEEP_BLANK_LINES_IN_DECLARATIONS/@EntryValue">2</s:Int64>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/XmlFormatter/BlankLineAfterProcessingInstructions/@EntryValue">True</s:Boolean>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/XmlFormatter/MaxBlankLines/@EntryValue">2</s:Int64>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/XmlFormatter/MaxSingleLineTagLength/@EntryValue">20</s:Int64>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/XmlFormatter/TagAttributesFormat/@EntryValue">OnSingleLine</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ANONYMOUS_METHOD_DECLARATION_BRACES/@EntryValue">NEXT_LINE_SHIFTED_2</s:String>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/BLANK_LINES_AROUND_SINGLE_LINE_FIELD/@EntryValue">1</s:Int64>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/BLANK_LINES_AROUND_SINGLE_LINE_INVOCABLE/@EntryValue">1</s:Int64>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/CASE_BLOCK_BRACES/@EntryValue">NEXT_LINE_SHIFTED_2</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_ATTRIBUTE_STYLE/@EntryValue">SEPARATE</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_CHOP_COMPOUND_DO_EXPRESSION/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_CHOP_COMPOUND_IF_EXPRESSION/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_CHOP_COMPOUND_WHILE_EXPRESSION/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_FIXED_BRACES_STYLE/@EntryValue">ALWAYS_ADD</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_FOR_BRACES_STYLE/@EntryValue">ALWAYS_ADD</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_FOREACH_BRACES_STYLE/@EntryValue">ALWAYS_ADD</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_IFELSE_BRACES_STYLE/@EntryValue">ALWAYS_ADD</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_USING_BRACES_STYLE/@EntryValue">ALWAYS_ADD</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_WHILE_BRACES_STYLE/@EntryValue">ALWAYS_ADD</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/INDENT_ANONYMOUS_METHOD_BLOCK/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/INDENT_EMBRACED_INITIALIZER_BLOCK/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/INDENT_NESTED_FIXED_STMT/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/INDENT_NESTED_USINGS_STMT/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/INITIALIZER_BRACES/@EntryValue">NEXT_LINE_SHIFTED_2</s:String>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_BLANK_LINES_IN_CODE/@EntryValue">1</s:Int64>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_BLANK_LINES_IN_DECLARATIONS/@EntryValue">1</s:Int64>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_CONSTRUCTOR_INITIALIZER_ON_SAME_LINE/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_FIELD_ATTRIBUTE_ON_SAME_LINE/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_SIMPLE_ACCESSOR_ON_SINGLE_LINE/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_SIMPLE_ANONYMOUSMETHOD_ON_SINGLE_LINE/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_SIMPLE_INITIALIZER_ON_SINGLE_LINE/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_SIMPLE_LINQ_ON_SINGLE_LINE/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_TYPE_CONSTRAINTS_ON_SAME_LINE/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SIMPLE_EMBEDDED_STATEMENT_STYLE/@EntryValue">LINE_BREAK</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_AFTER_TYPECAST_PARENTHESES/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_AROUND_MULTIPLICATIVE_OP/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_BEFORE_SIZEOF_PARENTHESES/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_BEFORE_TYPEOF_PARENTHESES/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/STICK_COMMENT/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_ARGUMENTS_STYLE/@EntryValue">CHOP_IF_LONG</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_EXTENDS_LIST_STYLE/@EntryValue">CHOP_ALWAYS</s:String>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_LIMIT/@EntryValue">120</s:Int64>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_PARAMETERS_STYLE/@EntryValue">CHOP_ALWAYS</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=LocalConstants/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=MethodPropertyEvent/@EntryIndexedValue">&lt;Policy Inspect="False" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=PrivateConstants/@EntryIndexedValue">&lt;Policy Inspect="False" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=PrivateInstanceFields/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="_" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=PrivateStaticFields/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="_" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=PrivateStaticReadonly/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="_" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=TypesAndNamespaces/@EntryIndexedValue">&lt;Policy Inspect="False" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002EMigrateBlankLinesAroundFieldToBlankLinesAroundProperty/@EntryIndexedValue">True</s:Boolean>
	<s:String x:Key="/Default/FilterSettingsManager/AttributeFilterXml/@EntryValue">&lt;data /&gt;</s:String>
	<s:String x:Key="/Default/FilterSettingsManager/CoverageFilterXml/@EntryValue">&lt;data&gt;&lt;IncludeFilters /&gt;&lt;ExcludeFilters /&gt;&lt;/data&gt;</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=6BE2D66FF60E25479E83E539E9234226/@KeyIndexDefined">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=6BE2D66FF60E25479E83E539E9234226/Applicability/=Live/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=6BE2D66FF60E25479E83E539E9234226/Field/=object/@KeyIndexDefined">True</s:Boolean>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=6BE2D66FF60E25479E83E539E9234226/Field/=object/Order/@EntryValue">1</s:Int64>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=6BE2D66FF60E25479E83E539E9234226/Field/=property/@KeyIndexDefined">True</s:Boolean>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=6BE2D66FF60E25479E83E539E9234226/Field/=property/Order/@EntryValue">0</s:Int64>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=6BE2D66FF60E25479E83E539E9234226/Field/=type/@KeyIndexDefined">True</s:Boolean>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=6BE2D66FF60E25479E83E539E9234226/Field/=type/Order/@EntryValue">2</s:Int64>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=6BE2D66FF60E25479E83E539E9234226/Reformat/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=6BE2D66FF60E25479E83E539E9234226/Scope/=C3001E7C0DA78E4487072B7E050D86C5/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=6BE2D66FF60E25479E83E539E9234226/Scope/=C3001E7C0DA78E4487072B7E050D86C5/CustomProperties/=minimumLanguageVersion/@EntryIndexedValue">2.0</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=6BE2D66FF60E25479E83E539E9234226/Scope/=C3001E7C0DA78E4487072B7E050D86C5/Type/@EntryValue">InCSharpFile</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=6BE2D66FF60E25479E83E539E9234226/Shortcut/@EntryValue">propex</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=6BE2D66FF60E25479E83E539E9234226/ShortenQualifiedReferences/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=6BE2D66FF60E25479E83E539E9234226/Text/@EntryValue">[Fact]&#xD;
public void prop_$property$()&#xD;
{&#xD;
    Assert.True(new PropertyExpectations&lt;$object$&gt;(x =&gt; x.$property$)&#xD;
                    .IsAutoProperty&lt;$type$&gt;()&#xD;
                    .IsNotDecorated()&#xD;
                    .Result);&#xD;
}&#xD;
</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=C6BF49F5C525BA4790112B2DDB609C88/@KeyIndexDefined">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=C6BF49F5C525BA4790112B2DDB609C88/Applicability/=Live/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=C6BF49F5C525BA4790112B2DDB609C88/Reformat/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=C6BF49F5C525BA4790112B2DDB609C88/Scope/=C3001E7C0DA78E4487072B7E050D86C5/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=C6BF49F5C525BA4790112B2DDB609C88/Scope/=C3001E7C0DA78E4487072B7E050D86C5/CustomProperties/=minimumLanguageVersion/@EntryIndexedValue">2.0</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=C6BF49F5C525BA4790112B2DDB609C88/Scope/=C3001E7C0DA78E4487072B7E050D86C5/Type/@EntryValue">InCSharpFile</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=C6BF49F5C525BA4790112B2DDB609C88/Shortcut/@EntryValue">theory</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=C6BF49F5C525BA4790112B2DDB609C88/ShortenQualifiedReferences/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=C6BF49F5C525BA4790112B2DDB609C88/Text/@EntryValue">[Theory]&#xD;
[InlineData("example")]&#xD;
public void $END$(string expected)&#xD;
{&#xD;
    var actual = "";&#xD;
&#xD;
    Assert.Equal(expected, actual);&#xD;
}&#xD;
</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=CE5A89506885A545A61A1E3A75955CFC/@KeyIndexDefined">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=CE5A89506885A545A61A1E3A75955CFC/Applicability/=Live/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=CE5A89506885A545A61A1E3A75955CFC/Reformat/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=CE5A89506885A545A61A1E3A75955CFC/Scope/=C3001E7C0DA78E4487072B7E050D86C5/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=CE5A89506885A545A61A1E3A75955CFC/Scope/=C3001E7C0DA78E4487072B7E050D86C5/CustomProperties/=minimumLanguageVersion/@EntryIndexedValue">2.0</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=CE5A89506885A545A61A1E3A75955CFC/Scope/=C3001E7C0DA78E4487072B7E050D86C5/Type/@EntryValue">InCSharpFile</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=CE5A89506885A545A61A1E3A75955CFC/Shortcut/@EntryValue">fact</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=CE5A89506885A545A61A1E3A75955CFC/ShortenQualifiedReferences/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=CE5A89506885A545A61A1E3A75955CFC/Text/@EntryValue">[Fact]&#xD;
public void $END$()&#xD;
{&#xD;
	var expected = true;&#xD;
	var actual = false;&#xD;
&#xD;
	Assert.Equal(expected, actual);&#xD;
}&#xD;
</s:String></wpf:ResourceDictionary>